# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2018-10-10 11:30
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FK',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('integer_field', models.IntegerField(blank=True, null=True, verbose_name='Integer')),
                ('char_field', models.CharField(blank=True, max_length=100, verbose_name='Character')),
            ],
        ),
        migrations.CreateModel(
            name='LineString',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('boolean_field', models.BooleanField()),
                ('null_boolean_field', models.NullBooleanField()),
                ('small_integer_field', models.SmallIntegerField(blank=True, null=True, verbose_name='Small Integer')),
                ('integer_field', models.IntegerField(blank=True, null=True, verbose_name='Integer')),
                ('float_field', models.FloatField(blank=True, null=True, verbose_name='Float')),
                ('decimal_field', models.DecimalField(blank=True, decimal_places=5, max_digits=15, null=True, verbose_name='Decimal')),
                ('char_field', models.CharField(blank=True, max_length=100, verbose_name='Character')),
                ('choice_field', models.CharField(blank=True, choices=[('a', 'A'), ('b', 'B')], max_length=10, verbose_name='Choice')),
                ('text_field', models.TextField(blank=True, verbose_name='Text')),
                ('date_field', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('time_field', models.TimeField(blank=True, null=True, verbose_name='Time')),
                ('date_time_field', models.DateTimeField(blank=True, null=True, verbose_name='Date Time')),
                ('geo_field', django.contrib.gis.db.models.fields.LineStringField(blank=True, null=True, srid=3857)),
                ('fk_field', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='basic.FK', verbose_name='Foreign Key')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='M2M',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('integer_field', models.IntegerField(blank=True, null=True, verbose_name='Integer')),
                ('char_field', models.CharField(blank=True, max_length=100, verbose_name='Character')),
            ],
        ),
        migrations.CreateModel(
            name='MultiLineString',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('boolean_field', models.BooleanField()),
                ('null_boolean_field', models.NullBooleanField()),
                ('small_integer_field', models.SmallIntegerField(blank=True, null=True, verbose_name='Small Integer')),
                ('integer_field', models.IntegerField(blank=True, null=True, verbose_name='Integer')),
                ('float_field', models.FloatField(blank=True, null=True, verbose_name='Float')),
                ('decimal_field', models.DecimalField(blank=True, decimal_places=5, max_digits=15, null=True, verbose_name='Decimal')),
                ('char_field', models.CharField(blank=True, max_length=100, verbose_name='Character')),
                ('choice_field', models.CharField(blank=True, choices=[('a', 'A'), ('b', 'B')], max_length=10, verbose_name='Choice')),
                ('text_field', models.TextField(blank=True, verbose_name='Text')),
                ('date_field', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('time_field', models.TimeField(blank=True, null=True, verbose_name='Time')),
                ('date_time_field', models.DateTimeField(blank=True, null=True, verbose_name='Date Time')),
                ('geo_field', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=3857)),
                ('fk_field', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='basic.FK', verbose_name='Foreign Key')),
                ('m2m_field', models.ManyToManyField(blank=True, null=True, to='basic.M2M', verbose_name='Many To Many')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MultiPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('boolean_field', models.BooleanField()),
                ('null_boolean_field', models.NullBooleanField()),
                ('small_integer_field', models.SmallIntegerField(blank=True, null=True, verbose_name='Small Integer')),
                ('integer_field', models.IntegerField(blank=True, null=True, verbose_name='Integer')),
                ('float_field', models.FloatField(blank=True, null=True, verbose_name='Float')),
                ('decimal_field', models.DecimalField(blank=True, decimal_places=5, max_digits=15, null=True, verbose_name='Decimal')),
                ('char_field', models.CharField(blank=True, max_length=100, verbose_name='Character')),
                ('choice_field', models.CharField(blank=True, choices=[('a', 'A'), ('b', 'B')], max_length=10, verbose_name='Choice')),
                ('text_field', models.TextField(blank=True, verbose_name='Text')),
                ('date_field', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('time_field', models.TimeField(blank=True, null=True, verbose_name='Time')),
                ('date_time_field', models.DateTimeField(blank=True, null=True, verbose_name='Date Time')),
                ('geo_field', django.contrib.gis.db.models.fields.MultiPointField(blank=True, null=True, srid=3857)),
                ('fk_field', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='basic.FK', verbose_name='Foreign Key')),
                ('m2m_field', models.ManyToManyField(blank=True, null=True, to='basic.M2M', verbose_name='Many To Many')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MultiPolygon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('boolean_field', models.BooleanField()),
                ('null_boolean_field', models.NullBooleanField()),
                ('small_integer_field', models.SmallIntegerField(blank=True, null=True, verbose_name='Small Integer')),
                ('integer_field', models.IntegerField(blank=True, null=True, verbose_name='Integer')),
                ('float_field', models.FloatField(blank=True, null=True, verbose_name='Float')),
                ('decimal_field', models.DecimalField(blank=True, decimal_places=5, max_digits=15, null=True, verbose_name='Decimal')),
                ('char_field', models.CharField(blank=True, max_length=100, verbose_name='Character')),
                ('choice_field', models.CharField(blank=True, choices=[('a', 'A'), ('b', 'B')], max_length=10, verbose_name='Choice')),
                ('text_field', models.TextField(blank=True, verbose_name='Text')),
                ('date_field', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('time_field', models.TimeField(blank=True, null=True, verbose_name='Time')),
                ('date_time_field', models.DateTimeField(blank=True, null=True, verbose_name='Date Time')),
                ('geo_field', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=3857)),
                ('fk_field', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='basic.FK', verbose_name='Foreign Key')),
                ('m2m_field', models.ManyToManyField(blank=True, null=True, to='basic.M2M', verbose_name='Many To Many')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Point',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('boolean_field', models.BooleanField()),
                ('null_boolean_field', models.NullBooleanField()),
                ('small_integer_field', models.SmallIntegerField(blank=True, null=True, verbose_name='Small Integer')),
                ('integer_field', models.IntegerField(blank=True, null=True, verbose_name='Integer')),
                ('float_field', models.FloatField(blank=True, null=True, verbose_name='Float')),
                ('decimal_field', models.DecimalField(blank=True, decimal_places=5, max_digits=15, null=True, verbose_name='Decimal')),
                ('char_field', models.CharField(blank=True, max_length=100, verbose_name='Character')),
                ('choice_field', models.CharField(blank=True, choices=[('a', 'A'), ('b', 'B')], max_length=10, verbose_name='Choice')),
                ('text_field', models.TextField(blank=True, verbose_name='Text')),
                ('date_field', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('time_field', models.TimeField(blank=True, null=True, verbose_name='Time')),
                ('date_time_field', models.DateTimeField(blank=True, null=True, verbose_name='Date Time')),
                ('geo_field', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=3857)),
                ('fk_field', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='basic.FK', verbose_name='Foreign Key')),
                ('m2m_field', models.ManyToManyField(blank=True, null=True, to='basic.M2M', verbose_name='Many To Many')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Polygon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('boolean_field', models.BooleanField()),
                ('null_boolean_field', models.NullBooleanField()),
                ('small_integer_field', models.SmallIntegerField(blank=True, null=True, verbose_name='Small Integer')),
                ('integer_field', models.IntegerField(blank=True, null=True, verbose_name='Integer')),
                ('float_field', models.FloatField(blank=True, null=True, verbose_name='Float')),
                ('decimal_field', models.DecimalField(blank=True, decimal_places=5, max_digits=15, null=True, verbose_name='Decimal')),
                ('char_field', models.CharField(blank=True, max_length=100, verbose_name='Character')),
                ('choice_field', models.CharField(blank=True, choices=[('a', 'A'), ('b', 'B')], max_length=10, verbose_name='Choice')),
                ('text_field', models.TextField(blank=True, verbose_name='Text')),
                ('date_field', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('time_field', models.TimeField(blank=True, null=True, verbose_name='Time')),
                ('date_time_field', models.DateTimeField(blank=True, null=True, verbose_name='Date Time')),
                ('geo_field', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=3857)),
                ('fk_field', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='basic.FK', verbose_name='Foreign Key')),
                ('m2m_field', models.ManyToManyField(blank=True, null=True, to='basic.M2M', verbose_name='Many To Many')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='linestring',
            name='m2m_field',
            field=models.ManyToManyField(blank=True, null=True, to='basic.M2M', verbose_name='Many To Many'),
        ),
    ]
